CREATE TABLE IF NOT EXISTS clientes(
    id TEXT PRIMARY KEY NOT NULL,
    nombre TEXT NOT NULL,
    is_deleted INTEGER NOT NULL DEFAULT 0
);

--ButacaEntity
CREATE TABLE IF NOT EXISTS ButacaEntity(
    id TEXT PRIMARY KEY NOT NULL,
    estado TEXT NOT NULL,
    tipo TEXT NOT NULL,
    precio INTEGER NOT NULL,
    createAt TEXT NOT NULL
);
-- Crud ButacaEntity
getAllButacaEntity:
SELECT * FROM ButacaEntity;

getByIdButacaEntity:
SELECT * FROM ButacaEntity WHERE id = ?;

getbutacaByTipo:
SELECT * FROM ButacaEntity WHERE tipo = ?;

insertarbutaca:
INSERT INTO ButacaEntity (id,estado,tipo,precio,createAt) VALUES (?,?,?,?,?);

updateButacaEntity:
UPDATE ButacaEntity SET id=?, estado=?, tipo=?, precio=?;

deleteAllButacaEntity:
DELETE FROM ButacaEntity;

deleteButacaId:
DELETE FROM ButacaEntity WHERE id=?;

--ComplementoEntity
CREATE TABLE IF NOT EXISTS ComplementoEntity(
    tipo TEXT NOT NULL ,
    id TEXT PRIMARY KEY NOT NULL,
    nombre TEXT NOT NULL,
    precio INTEGER NOT NULL
);
-- Crud ComplemetoEntity
getAllComplemetoEntity:
SELECT * FROM ComplementoEntity;

getByIdComplemetoEntity:
SELECT * FROM ComplementoEntity WHERE id = ?;

getComplementoByTipo:
SELECT * FROM ComplementoEntity WHERE tipo=?;

updateComplementoEntity:
UPDATE ComplementoEntity SET id=?, nombre=?, precio=?, tipo=?;

deleteAllComplemetoEntity:
DELETE FROM ComplementoEntity;

insertComplemento:
INSERT INTO ComplementoEntity(tipo,id,nombre,precio) VALUES(?,?,?,?);

deleteComplementoByID:
DELETE FROM ComplementoEntity WHERE id=?;

--Tabla ventas
CREATE TABLE IF NOT EXISTS VentaEntity (
    id TEXT PRIMARY KEY,
    cliente_id TEXT NOT NULL REFERENCES clientes(id),
    total REAL NOT NULL,
    created_at TEXT NOT NULL,
    updated_at TEXT NOT NULL,
    is_deleted INTEGER NOT NULL DEFAULT 0
);
-- Operaciones CRUD para la tabla de Ventas
removeAllVentas:
DELETE FROM VentaEntity;

selectAllVentas:
SELECT * FROM VentaEntity;

selectVentaById:
SELECT * FROM VentaEntity WHERE id = ?;

existsVenta:
SELECT COUNT(*) > 0 AS es_mayor_cero FROM VentaEntity WHERE id = ?;

selectAllVentasByIsDeleted:
SELECT * FROM VentaEntity WHERE is_deleted = ?;

selectVentaLastInserted:
SELECT * FROM VentaEntity WHERE id = last_insert_rowid();

insertVenta:
INSERT INTO VentaEntity (id, cliente_id, total, created_at, updated_at) VALUES (?, ?, ?, ?, ?);

updateVenta:
UPDATE VentaEntity SET cliente_id = ?, total = ?, updated_at = ?, is_deleted = ? WHERE id = ?;

deleteVenta:
DELETE FROM VentaEntity WHERE id = ?;

-- Tabla de Lineas de Ventas
CREATE TABLE IF NOT EXISTS LineaVentaEntity (
     id TEXT PRIMARY KEY,
     venta_id TEXT NOT NULL REFERENCES VentaEntity(id),
     Butaca_id TEXT NOT NULL REFERENCES ButacaEntity(id),
     Complemento1_id TEXT REFERENCES ComplementoEntity(id) DEFAULT NULL,
     Complemento2_id TEXT REFERENCES ComplementoEntity(id) DEFAULT NULL,
     Complemento3_id TEXT REFERENCES ComplementoEntity(id) DEFAULT NULL,
     cantidad INTEGER NOT NULL,
     precio REAL NOT NULL,
     created_at TEXT NOT NULL,
     updated_at TEXT NOT NULL,
     is_deleted INTEGER NOT NULL DEFAULT 0
);

-- Operaciones CRUD para la tabla de Lineas de Ventas
removeAllLineasVentas:
DELETE FROM LineaVentaEntity;

selectAllLineasVentas:
SELECT * FROM LineaVentaEntity;

selectLineaVentaById:
SELECT * FROM LineaVentaEntity WHERE id = ?;

selectAllLineasVentaByVentaId:
SELECT * FROM LineaVentaEntity WHERE venta_id = ?;

selectAllLineasVentasByIsDeleted:
SELECT * FROM LineaVentaEntity WHERE is_deleted = ?;

selectLineaVentaLastInserted:
SELECT * FROM LineaVentaEntity WHERE id = last_insert_rowid();

insertLineaVenta:
INSERT INTO LineaVentaEntity (id, venta_id, Butaca_id, Complemento1_id, Complemento2_id, Complemento3_id, cantidad, precio, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

updateLineaVenta:
UPDATE LineaVentaEntity SET venta_id = ?, Butaca_id = ?, Complemento1_id= ?, Complemento2_id = ?, Complemento3_id = ?, cantidad = ?, precio = ?, updated_at = ?, is_deleted = ? WHERE id = ?;

deleteLineaVenta:
DELETE FROM LineaVentaEntity WHERE id = ?;
